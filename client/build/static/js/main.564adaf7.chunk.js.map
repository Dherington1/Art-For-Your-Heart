{"version":3,"sources":["utils/queries.js","utils/helpers.js","components/CartItem/index.js","utils/actions.js","utils/auth.js","components/Cart/index.js","components/Hero/Hero.js","components/ShopCategories/ShopCategories.js","components/ShopFav/ShopFavCards.js","components/ShopFav/ShopFav.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","utils/reducers.js","utils/store.js","components/ProductItem/index.js","pages/Kids.js","pages/Adults.js","components/Footer/Footer.js","pages/Cart.js","App.js","serviceWorker.js","index.js"],"names":["QUERY_PRODUCTS","gql","QUERY_CHECKOUT","QUERY_CATEGORIES","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","CartItem","item","dispatch","useDispatch","md","className","src","image","alt","xs","name","price","type","placeholder","value","purchaseQuantity","onChange","target","parseInt","role","aria-label","onClick","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","state","useSelector","useLazyQuery","getCheckout","data","toggleCart","useEffect","then","res","redirectToCheckout","sessionId","checkout","session","a","cart","products","length","getCart","cartOpen","map","key","sum","forEach","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","to","Hero","ShopCategories","sm","class","ShopFavCards","itemInCart","find","cartItem","product","ShopFav","useState","setProducts","search","categoryData","useQuery","category","quantity","Home","Detail","id","useParams","currentProduct","setCurrentProduct","loading","setQuantity","indexedProducts","description","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","props","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","href","Signup","addUser","Object","values","firstName","lastName","NavBarCom","categories","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","navbarScroll","navbar","width","Link","NavDropdown","title","Item","logout","Success","addOrder","setTimeout","saveOrder","initialState","currentCategory","reducer","action","newState","filter","createStore","ProductItem","Kids","Adults","Footer","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.564adaf7.chunk.js","sourcesContent":["import gql from \"graphql-tag\";\r\n\r\nexport const QUERY_PRODUCTS = gql`\r\n  query getProducts($category: ID) {\r\n    products(category: $category) {\r\n      _id\r\n      name\r\n      description\r\n      price\r\n      quantity\r\n      image\r\n      category {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_CHECKOUT = gql`\r\n  query getCheckout($products: [ID]!) {\r\n    checkout(products: $products) {\r\n      session\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_ALL_PRODUCTS = gql`\r\n  {\r\n    products {\r\n      _id\r\n      name\r\n      description\r\n      price\r\n      quantity\r\n      category {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_CATEGORIES = gql`\r\n  {\r\n    categories {\r\n      _id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_USER = gql`\r\n  {\r\n    user {\r\n      firstName\r\n      lastName\r\n      orders {\r\n        _id\r\n        purchaseDate\r\n        products {\r\n          _id\r\n          name\r\n          description\r\n          price\r\n          quantity\r\n          image\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","export function pluralize(name, count) {\r\n  if (count === 1) {\r\n    return name;\r\n  }\r\n  return name + 's';\r\n}\r\n\r\nexport function idbPromise(storeName, method, object) {\r\n  return new Promise((resolve, reject) => {\r\n    const request = window.indexedDB.open('shop-shop', 1);\r\n    let db, tx, store;\r\n    request.onupgradeneeded = function(e) {\r\n      const db = request.result;\r\n      db.createObjectStore('products', { keyPath: '_id' });\r\n      db.createObjectStore('categories', { keyPath: '_id' });\r\n      db.createObjectStore('cart', { keyPath: '_id' });\r\n    };\r\n\r\n    request.onerror = function(e) {\r\n      console.log('There was an error');\r\n    };\r\n\r\n    request.onsuccess = function(e) {\r\n      db = request.result;\r\n      tx = db.transaction(storeName, 'readwrite');\r\n      store = tx.objectStore(storeName);\r\n\r\n      db.onerror = function(e) {\r\n        console.log('error', e);\r\n      };\r\n\r\n      switch (method) {\r\n        case 'put':\r\n          store.put(object);\r\n          resolve(object);\r\n          break;\r\n        case 'get':\r\n          const all = store.getAll();\r\n          all.onsuccess = function() {\r\n            resolve(all.result);\r\n          };\r\n          break;\r\n        case 'delete':\r\n          store.delete(object._id);\r\n          break;\r\n        default:\r\n          console.log('No valid method');\r\n          break;\r\n      }\r\n\r\n      tx.oncomplete = function() {\r\n        db.close();\r\n      };\r\n    };\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport './index.css'\r\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col\r\n} from 'reactstrap';\r\n\r\nconst CartItem = ({ item }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const removeFromCart = item => {\r\n    dispatch({\r\n      type: REMOVE_FROM_CART,\r\n      _id: item._id,\r\n    });\r\n    idbPromise(\"cart\", \"delete\", { ...item });\r\n  };\r\n\r\n  const onChange = e => {\r\n    const value = e.target.value;\r\n    if (value === \"0\") {\r\n      dispatch({\r\n        type: REMOVE_FROM_CART,\r\n        _id: item._id,\r\n      });\r\n      idbPromise(\"cart\", \"delete\", { ...item });\r\n    } else {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: item._id,\r\n        purchaseQuantity: parseInt(value),\r\n      });\r\n      idbPromise(\"cart\", \"put\", { ...item, purchaseQuantity: parseInt(value) });\r\n    }\r\n  };\r\n\r\n  return (\r\n\r\n\r\n    <Container >\r\n      <Row>\r\n        {/* img */}\r\n        <Col md={6}>\r\n          <div className=\"product-img\">\r\n            <img  src={`/images/${item.image}`} alt=\"item\" />\r\n          </div>\r\n        </Col>\r\n        {/* price , quantity */}\r\n        <Col xs={8} md={6}>\r\n          <div className=\"name\">\r\n          {item.name}\r\n          </div>\r\n          <div className=\"price\">\r\n           $ {item.price}\r\n          </div>\r\n          <div className=\"qty\">\r\n            <span>Qty: </span>\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"1\"\r\n              value={item.purchaseQuantity}\r\n              onChange={onChange}\r\n              className='removeFromCart'\r\n            />\r\n            <span\r\n              role=\"img\"\r\n              aria-label=\"trash\"\r\n              onClick={() => removeFromCart(item)}\r\n              className='remove-logo'\r\n            >\r\n              ✕\r\n            </span>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n\r\n    </Container>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\r\n\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const CLEAR_CART = \"CLEAR_CART\";\r\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\r\nexport const TOGGLE_CART = \"TOGGLE_CART\";\r\n\r\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\r\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\r\n","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    // Checks if there is a saved token and it's still valid\r\n    const token = this.getToken();\r\n    return !!token && !this.isTokenExpired(token);\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getToken() {\r\n    // Retrieves the user token from localStorage\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    // Saves user token to localStorage\r\n    localStorage.setItem('id_token', idToken);\r\n\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    // Clear user token and profile data from localStorage\r\n    localStorage.removeItem('id_token');\r\n    // this will reload the page and reset the state of the application\r\n    window.location.assign('/');\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { useEffect } from \"react\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { useLazyQuery } from \"@apollo/react-hooks\";\r\nimport { QUERY_CHECKOUT } from \"../../utils/queries\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\nimport CartItem from \"../CartItem\";\r\nimport Auth from \"../../utils/auth\";\r\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from \"../../utils/actions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./style.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst stripePromise = loadStripe(\"pk_test_TYooMQauvdEDq54NiTphI7jx\");\r\n\r\nconst Cart = () => {\r\n  const state = useSelector(state => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      stripePromise.then(res => {\r\n        res.redirectToCheckout({ sessionId: data.checkout.session });\r\n      });\r\n    }\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    async function getCart() {\r\n      const cart = await idbPromise(\"cart\", \"get\");\r\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\r\n    }\r\n\r\n    if (!state.cart.length) {\r\n      getCart();\r\n    }\r\n  }, [state.cart.length, dispatch]);\r\n\r\n  function toggleCart() {\r\n    dispatch({ type: TOGGLE_CART });\r\n  }\r\n\r\n  function calculateTotal() {\r\n    let sum = 0;\r\n    state.cart.forEach(item => {\r\n      sum += item.price * item.purchaseQuantity;\r\n    });\r\n    return sum.toFixed(2);\r\n  }\r\n\r\n  function submitCheckout() {\r\n    const productIds = [];\r\n\r\n    state.cart.forEach(item => {\r\n      for (let i = 0; i < item.purchaseQuantity; i++) {\r\n        productIds.push(item._id);\r\n      }\r\n    });\r\n\r\n    getCheckout({\r\n      variables: { products: productIds },\r\n    });\r\n  }\r\n\r\n  if (!state.cartOpen) {\r\n    return (\r\n      <>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"cart\">\r\n      <div className=\"close\" onClick={toggleCart}>\r\n        [close]\r\n      </div>\r\n      <h2>Shopping Cart</h2>\r\n      {state.cart.length ? (\r\n        <div>\r\n          {state.cart.map(item => (\r\n            <CartItem key={item._id} item={item} />\r\n          ))}\r\n\r\n          <div className=\"flex-row space-between\">\r\n            <strong>Total: $ {calculateTotal()}</strong>\r\n\r\n            {Auth.loggedIn() ? (\r\n              <>\r\n                <button onClick={submitCheckout}>Checkout</button>\r\n                \r\n              </>\r\n            ) : (\r\n              <Link to='/login'>\r\n                <span onClick={toggleCart}>(log in to check out)</span>\r\n              </Link>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n      \r\n        <>\r\n          <p>Your cart is currently empty</p>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import React from 'react'\r\nimport './Hero.css'\r\n\r\nconst Hero = () => {\r\n\r\n\r\n  return (\r\n   \r\n      <figure className=\"textover\">\r\n        <img className='Hero-img' src='/images/flatlay-craft-diy-school-arts.jpeg' alt='hero'/>\r\n        <figcaption>\r\n         \r\n         ARTS & CRAFTS SUPPLIES FOR EVERYONE\r\n        </figcaption>\r\n      </figure>\r\n    \r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col\r\n} from 'reactstrap';\r\nimport './ShopCategories.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ShopCategories = () => {\r\n  return (\r\n    <div>\r\n      <Container className='container-category'>\r\n\r\n        <h3>SHOP BY CATEGORY</h3>\r\n\r\n        <Row>\r\n          <Col sm={12} md={6}>\r\n            <figure class=\"textcenter\">\r\n              <img className='category-img' src='/images/art-therapy-mc-inline-201016-05.jpeg' alt='kid-art' /> \r\n              <figcaption className='fig'>\r\n                <Link to='/professional'>\r\n                  <button>Professional Art</button>\r\n                </Link>\r\n              </figcaption>\r\n            </figure>\r\n          </Col>\r\n\r\n          <Col sm={12} md={6}>\r\n            <figure class=\"textcenter\">\r\n              <img className='category-img' src='/images/happy-kids-doing-arts-crafts-together-DIY-Kids-Crafts-ss-Feature.jpeg' alt='kid-art' /> \r\n              <figcaption>\r\n                <Link to='/kids'>\r\n                  <button>Kids Art</button>\r\n                </Link>\r\n              </figcaption>\r\n            </figure>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ShopCategories\r\n","import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {\r\n  Col\r\n} from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\n\r\n\r\nconst ShopFavCards = (item) => {\r\n\r\n\r\n  const state = useSelector(state => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const { image, name, _id, price } = item;\r\n\r\n  const { cart } = state;\r\n\r\n  const addToCart = () => {\r\n    const itemInCart = cart.find(cartItem => cartItem._id === _id);\r\n    if (itemInCart) {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: _id,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n      idbPromise(\"cart\", \"put\", {\r\n        ...itemInCart,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        product: { ...item, purchaseQuantity: 1 },\r\n      });\r\n      idbPromise(\"cart\", \"put\", { ...item, purchaseQuantity: 1 });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Col xs={6} sm={4} md={4}>\r\n      <div className=\"card \">\r\n        <Link to={`/products/${_id}`}>\r\n          <img alt={name} src={`/images/${image}`} />\r\n        </Link>\r\n          <p className='product-name'>{name}</p>\r\n        <div className='product-price'>\r\n          <span>${price}</span>\r\n        </div>\r\n        <button onClick={addToCart}>Add to cart</button>\r\n      </div>\r\n    </Col>\r\n  );\r\n\r\n}\r\n\r\nexport default ShopFavCards\r\n","import React, { useEffect, useState } from 'react'\r\nimport ShopFavCards from './ShopFavCards'\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { QUERY_PRODUCTS } from \"../../utils/queries\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col\r\n} from 'reactstrap';\r\n\r\n\r\nconst ShopFav = () => {\r\n  \r\n  const [products, setProducts] = useState([])  \r\n  const [search, setSearch] = useState('62f7398930933741203d623b')\r\n\r\n  // grab our data from the query \r\n  const {data: categoryData} = useQuery(QUERY_PRODUCTS, {\r\n    variables: {\r\n      // run our id so its hard coded\r\n      category: search\r\n    }\r\n  })\r\n\r\n  useEffect(()=> {\r\n    // if category data is there and its bigger than 0 \r\n    if(categoryData && categoryData.products.length > 0){\r\n      // set it to our products\r\n      setProducts(categoryData.products)\r\n    }\r\n\r\n  }, [categoryData])\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h3>SHOP FAVORITES</h3>\r\n     \r\n     <Container>\r\n          <Row>\r\n            {products.map(product => (\r\n                <ShopFavCards\r\n                  key={product._id}\r\n                  _id={product._id}\r\n                  image={product.image}\r\n                  name={product.name}\r\n                  price={product.price}\r\n                  quantity={product.quantity}\r\n                />\r\n            ))}\r\n          </Row>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ShopFav\r\n","import React from \"react\";\r\nimport Cart from \"../components/Cart\";\r\nimport Hero from \"../components/Hero/Hero\";\r\nimport ShopCategories from \"../components/ShopCategories/ShopCategories\";\r\nimport ShopFav from \"../components/ShopFav/ShopFav\";\r\n\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <Hero />\r\n      <ShopCategories />\r\n      <ShopFav />\r\n      {/* <Cart /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {\r\n  Container,\r\n  Col, \r\n  Row,\r\n  Card\r\n} from 'reactstrap';\r\nimport Cart from \"../components/Cart\";\r\nimport {\r\n  REMOVE_FROM_CART,\r\n  UPDATE_CART_QUANTITY,\r\n  ADD_TO_CART,\r\n  UPDATE_PRODUCTS,\r\n} from \"../utils/actions\";\r\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\r\nimport { idbPromise } from \"../utils/helpers\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport './Details.css'\r\n\r\n\r\nfunction Detail() {\r\n  const state = useSelector(state => state);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { id } = useParams();\r\n\r\n  const [currentProduct, setCurrentProduct] = useState({});\r\n\r\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\r\n\r\n  const { products, cart } = state;\r\n\r\n  const [quantity, setQuantity] = useState(1)\r\n\r\n  useEffect(() => {\r\n    // already in global store\r\n    if (products.length) {\r\n      setCurrentProduct(products.find(product => product._id === id));\r\n    }\r\n    // retrieved from server\r\n    else if (data) {\r\n      dispatch({\r\n        type: UPDATE_PRODUCTS,\r\n        products: data.products,\r\n      });\r\n\r\n      data.products.forEach(product => {\r\n        idbPromise(\"products\", \"put\", product);\r\n      });\r\n    }\r\n    // get cache from idb\r\n    else if (!loading) {\r\n      idbPromise(\"products\", \"get\").then(indexedProducts => {\r\n        dispatch({\r\n          type: UPDATE_PRODUCTS,\r\n          products: indexedProducts,\r\n        });\r\n      });\r\n    }\r\n  }, [products, data, loading, dispatch, id]);\r\n\r\n  const addToCart = () => {\r\n    const itemInCart = cart.find(cartItem => cartItem._id === id);\r\n    // if the item is in the cart update the quantity\r\n    if (itemInCart) {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: id,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + quantity,\r\n      });\r\n      idbPromise(\"cart\", \"put\", {\r\n        ...itemInCart,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + quantity,\r\n      });\r\n      console.log(quantity)\r\n    } \r\n    // if its not in the cart add it\r\n    else {\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        product: { ...currentProduct, purchaseQuantity: quantity },\r\n      });\r\n      idbPromise(\"cart\", \"put\", { ...currentProduct, purchaseQuantity: quantity });\r\n      console.log(quantity)\r\n    }\r\n  };\r\n\r\n  const removeFromCart = () => {\r\n    dispatch({\r\n      type: REMOVE_FROM_CART,\r\n      _id: currentProduct._id,\r\n    });\r\n\r\n    idbPromise(\"cart\", \"delete\", { ...currentProduct });\r\n  };\r\n\r\n  const handleQuantity = (e) => {\r\n    // value is equal to our quantity number\r\n    const value = e.target.value;\r\n    // set that number to our useState\r\n    setQuantity(value);\r\n  \r\n  }\r\n\r\n  return (\r\n    <>\r\n\r\n      <Container className=\"detail-container\">\r\n        <Row>\r\n          <div className=\"link-to-home\">\r\n            <Link to='/'>Home</Link> / {currentProduct.name}\r\n          </div>\r\n          {/* left column */}\r\n          <Col md={7}>\r\n            <img\r\n              src={`/images/${currentProduct.image}`}\r\n              alt={currentProduct.name}\r\n            />\r\n          </Col>\r\n          {/* right column */}\r\n          <Col md={5}>\r\n          <div className=\"name\">\r\n            {currentProduct.name}\r\n          </div>\r\n\r\n          <div className=\"price\">\r\n           $ {currentProduct.price}\r\n          </div>\r\n\r\n          <div className=\"quantity\">\r\n            Quantity\r\n          </div>\r\n          <div className=\"input\">\r\n            <input className=\"inputBox\" type='number' value={quantity} onChange={handleQuantity}/>\r\n          </div>\r\n          <div className=\"toCart\">\r\n            <button className=\"toCartBtn\" onClick={addToCart}>Add to Cart</button>\r\n          </div>\r\n          \r\n          <div >\r\n            <p className=\"productInfo\">Product info</p>\r\n          </div>\r\n          <div>\r\n            <p>{currentProduct.description}</p>\r\n          </div>\r\n\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    <Cart />\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Detail;\r\n","import React from \"react\";\r\n\r\nfunction Jumbotron({ children }) {\r\n  return (\r\n    <div\r\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\n\r\nconst NoMatch = () => {\r\n  return (\r\n    <div>\r\n      <Jumbotron>\r\n        <h1>404 Page Not Found</h1>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoMatch;\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_ORDER = gql`\r\n  mutation addOrder($products: [ID]!) {\r\n    addOrder(products: $products) {\r\n      purchaseDate\r\n      products {\r\n        _id\r\n        name\r\n        description\r\n        price\r\n        quantity\r\n        category {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $email: String!\r\n    $password: String!\r\n  ) {\r\n    addUser(\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      password: $password\r\n    ) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { LOGIN } from \"../utils/mutations\";\r\nimport Auth from \"../utils/auth\";\r\nimport './login.css'\r\nimport {Link} from 'react-router-dom'\r\nimport Cart from '../components/Cart/index'\r\n\r\nfunction Login(props) {\r\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\r\n  const [login, { error }] = useMutation(LOGIN);\r\n\r\n  const handleFormSubmit = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      const mutationResponse = await login({\r\n        variables: { email: formState.email, password: formState.password },\r\n      });\r\n      const token = mutationResponse.data.login.token;\r\n      Auth.login(token);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n       <form class=\"login-form\" onSubmit={handleFormSubmit}>\r\n            <div class=\"login-form__content\">\r\n                <div class=\"login-form__header\">Login to your account</div>\r\n                <input class=\"login-form__input\" type=\"text\" name=\"dc_username\" \r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  onChange={handleChange}\r\n                 />\r\n                <input class=\"login-form__input\" type=\"password\" name=\"dc_username\" placeholder=\"Password\" \r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  id=\"pwd\"\r\n                  onChange={handleChange}\r\n                />\r\n                <button class=\"login-form__button\" type=\"submit\">Login</button>\r\n                \r\n                <Link to='/register'>\r\n                  <div class=\"login-form__links\">\r\n                      <a class=\"login-form__link\" href=\"/signup\">Register</a>\r\n                  </div>\r\n                </Link>\r\n\r\n                {error ? (\r\n                  <div>\r\n                    <p className=\"error-text\">The provided credentials are incorrect</p>\r\n                  </div>\r\n                ) : null}\r\n\r\n            </div>\r\n        </form>\r\n        <Cart />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport Auth from \"../utils/auth\";\r\nimport { ADD_USER } from \"../utils/mutations\";\r\nimport Cart from '../components/Cart/index'\r\n\r\n\r\nfunction Signup(props) {\r\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\r\n  const [addUser, { error }] = useMutation(ADD_USER);\r\n\r\n  if (error) {\r\n    console.log(Object.values(error));\r\n  }\r\n  const handleFormSubmit = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      const mutationResponse = await addUser({\r\n        variables: {\r\n          email: formState.email,\r\n          password: formState.password,\r\n          firstName: formState.firstName,\r\n          lastName: formState.lastName,\r\n        },\r\n      });\r\n      const token = mutationResponse.data.addUser.token;\r\n      Auth.login(token);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form class=\"login-form\" onSubmit={handleFormSubmit}>\r\n            <div class=\"login-form__content\">\r\n                <div class=\"login-form__header\">Register for an account</div>\r\n                <input class=\"login-form__input\" type=\"text\" name=\"dc_username\"\r\n                  placeholder=\"First Name\"\r\n                  name=\"firstName\"\r\n                  type=\"firstName\"\r\n                  id=\"firstName\"\r\n                  onChange={handleChange}\r\n                />\r\n                <input class=\"login-form__input\" type=\"text\" name=\"dc_username\"\r\n                  placeholder=\"Last Name\"\r\n                  name=\"lastName\"\r\n                  type=\"lastName\"\r\n                  id=\"lastName\"\r\n                  onChange={handleChange}\r\n                />\r\n                <input class=\"login-form__input\" type=\"text\" name=\"dc_username\" \r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  onChange={handleChange}\r\n                 />\r\n                <input class=\"login-form__input\" type=\"password\" name=\"dc_username\" \r\n                  placeholder=\"Password\" \r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  id=\"pwd\"\r\n                  onChange={handleChange}\r\n                />\r\n                <button class=\"login-form__button\" type=\"submit\">Register</button>\r\n                <Link to='/login'>\r\n                  <div class=\"login-form__links\">\r\n                      <a class=\"login-form__link\" href=\"/\">login</a>\r\n                  </div>\r\n                </Link>\r\n              \r\n            </div>\r\n        </form>\r\n        <Cart />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import Auth from \"../../utils/auth\";\r\nimport './index.css'\r\nimport { Link } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport React, { useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  UPDATE_CATEGORIES,\r\n  UPDATE_CURRENT_CATEGORY,\r\n} from \"../../utils/actions\";\r\nimport { QUERY_CATEGORIES } from \"../../utils/queries\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { TOGGLE_CART, } from \"../../utils/actions\";\r\nimport { useState } from \"react\";\r\n\r\n\r\n\r\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n\r\nimport Cart from \"../Cart\";\r\n\r\nfunction NavBarCom() {\r\n\r\n  const state = useSelector(state => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const { categories } = state;\r\n\r\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (categoryData) {\r\n      dispatch({\r\n        type: UPDATE_CATEGORIES,\r\n        categories: categoryData.categories,\r\n      });\r\n      categoryData.categories.forEach(category => {\r\n        idbPromise(\"categories\", \"put\", category);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise(\"categories\", \"get\").then(categories => {\r\n        dispatch({\r\n          type: UPDATE_CATEGORIES,\r\n          categories: categories,\r\n        });\r\n      });\r\n    }\r\n  }, [categoryData, loading, dispatch]);\r\n\r\n  const handleClick = id => {\r\n    console.log(id)\r\n    dispatch({\r\n      type: UPDATE_CURRENT_CATEGORY,\r\n      currentCategory: id,\r\n    });\r\n  };\r\n\r\n  function toggleCart() {\r\n    dispatch({ type: TOGGLE_CART });\r\n    console.log('clicked');\r\n  }\r\n\r\n  function showNavigation() {\r\n    if (Auth.loggedIn()) {\r\n      return (\r\n        <Navbar bg=\"light\" expand=\"sm\">\r\n        <Navbar.Brand href=\"/\" id='title'>ART FOR YOUR HEART</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n        \r\n        <Navbar.Collapse id=\"navbarScroll\">\r\n          <Nav\r\n            navbarScroll\r\n            className=\" justify-content-end\" navbar style={{ width: \"99%\" }}\r\n          >\r\n            <Nav.Link href=\"/\">HOME</Nav.Link>\r\n            <NavDropdown title=\"SHOP\" id=\"navbarScrollingDropdown\">\r\n              <NavDropdown.Item href=\"/professional\">\r\n              PROFESSIONAL ART\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/kids\">\r\n                KIDS ART\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n              <Nav.Link href=\"/\" onClick={() => Auth.logout()}>LOGOUT</Nav.Link>\r\n              <Nav.Link href=\"/Cart\" id='cart'><i className=\"fas fa-shopping-cart\"></i></Nav.Link>\r\n          </Nav>\r\n         \r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      )\r\n    } else {\r\n      return (\r\n        <Navbar bg=\"light\" expand=\"md\">\r\n        <Navbar.Brand href=\"/\" id='title'>ART FOR YOUR HEART</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n        \r\n        <Navbar.Collapse id=\"navbarScroll\">\r\n          <Nav\r\n            navbarScroll\r\n            className=\" justify-content-end\" navbar style={{ width: \"99%\" }}\r\n          >\r\n            <Nav.Link href=\"/\">HOME</Nav.Link>\r\n            <NavDropdown title=\"SHOP\" id=\"navbarScrollingDropdown\">\r\n              <NavDropdown.Item href=\"/professional\">\r\n              PROFESSIONAL ART\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/kids\">\r\n                KIDS ART\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n              <Nav.Link href=\"/login\">LOGIN</Nav.Link>\r\n              <Nav.Link href=\"/Cart\"  id='cart'><i className=\"fas fa-shopping-cart\"></i></Nav.Link>\r\n          </Nav>\r\n         \r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n\r\n return (\r\n    <div>\r\n      {showNavigation()}\r\n    </div>\r\n  );\r\n}\r\nexport default NavBarCom;\r\n ","import React, { useEffect } from \"react\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport { ADD_ORDER } from \"../utils/mutations\";\r\nimport { idbPromise } from \"../utils/helpers\";\r\n\r\nfunction Success() {\r\n  const [addOrder] = useMutation(ADD_ORDER);\r\n\r\n  useEffect(() => {\r\n    async function saveOrder() {\r\n      const cart = await idbPromise(\"cart\", \"get\");\r\n      const products = cart.map(item => item._id);\r\n\r\n      if (products.length) {\r\n        const { data } = await addOrder({ variables: { products } });\r\n        const productData = data.addOrder.products;\r\n\r\n        productData.forEach(item => {\r\n          idbPromise(\"cart\", \"delete\", item);\r\n        });\r\n      }\r\n\r\n      setTimeout(() => {\r\n        window.location.assign(\"/\");\r\n      }, 3000);\r\n    }\r\n\r\n    saveOrder();\r\n  }, [addOrder]);\r\n\r\n  return (\r\n    <div>\r\n      <Jumbotron>\r\n        <h1>Success!</h1>\r\n        <h2>Thank you for your purchase!</h2>\r\n        <h2>You will now be redirected to the home page</h2>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Success;\r\n","import {\r\n  UPDATE_PRODUCTS,\r\n  ADD_TO_CART,\r\n  UPDATE_CART_QUANTITY,\r\n  REMOVE_FROM_CART,\r\n  ADD_MULTIPLE_TO_CART,\r\n  UPDATE_CATEGORIES,\r\n  UPDATE_CURRENT_CATEGORY,\r\n  CLEAR_CART,\r\n  TOGGLE_CART,\r\n} from \"./actions\";\r\n\r\nconst initialState = {\r\n  products: [],\r\n  cart: [],\r\n  cartOpen: false,\r\n  categories: [],\r\n  currentCategory: \"\",\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        products: [...action.products],\r\n      };\r\n\r\n    case ADD_TO_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: true,\r\n        cart: [...state.cart, action.product],\r\n      };\r\n\r\n    case ADD_MULTIPLE_TO_CART:\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, ...action.products],\r\n      };\r\n\r\n    case UPDATE_CART_QUANTITY:\r\n      return {\r\n        ...state,\r\n        cartOpen: true,\r\n        cart: state.cart.map(product => {\r\n          if (action._id === product._id) {\r\n            product.purchaseQuantity = action.purchaseQuantity;\r\n          }\r\n          return product;\r\n        }),\r\n      };\r\n\r\n    case REMOVE_FROM_CART:\r\n      let newState = state.cart.filter(product => {\r\n        return product._id !== action._id;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        cartOpen: newState.length > 0,\r\n        cart: newState,\r\n      };\r\n\r\n    case CLEAR_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: false,\r\n        cart: [],\r\n      };\r\n\r\n    case TOGGLE_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: !state.cartOpen,\r\n      };\r\n\r\n    case UPDATE_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        categories: [...action.categories],\r\n      };\r\n\r\n    case UPDATE_CURRENT_CATEGORY:\r\n      return {\r\n        ...state,\r\n        currentCategory: action.currentCategory,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore } from \"redux\";\r\nimport reducer from \"./reducers\";\r\n\r\nconst store = createStore(reducer);\r\nexport default store;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { pluralize } from \"../../utils/helpers\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\nimport {\r\n  Col\r\n} from 'reactstrap';\r\n\r\nfunction ProductItem(item) {\r\n  const state = useSelector(state => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const { image, name, _id, price, quantity } = item;\r\n\r\n  const { cart } = state;\r\n\r\n  const addToCart = () => {\r\n    console.log(_id)\r\n    const itemInCart = cart.find(cartItem => cartItem._id === _id);\r\n    if (itemInCart) {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: _id,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n      idbPromise(\"cart\", \"put\", {\r\n        ...itemInCart,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        product: { ...item, purchaseQuantity: 1 },\r\n      });\r\n      idbPromise(\"cart\", \"put\", { ...item, purchaseQuantity: 1 });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Col xs={6} sm={4} md={4}>\r\n      <div className=\"card \">\r\n        <Link to={`/products/${_id}`}>\r\n          <img alt={name} src={`/images/${image}`} />\r\n        </Link>\r\n          <p className='product-name'>{name}</p>\r\n        <div className='product-price'>\r\n          <span>${price}</span>\r\n        </div>\r\n        <button onClick={addToCart}>Add to cart</button>\r\n      </div>\r\n    </Col>\r\n  );\r\n}\r\n\r\nexport default ProductItem;\r\n","import { useQuery } from '@apollo/react-hooks';\r\nimport React, {useState, useEffect} from 'react'\r\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\r\nimport ProductItem from \"../components/ProductItem/index\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {\r\n  Container,\r\n  Col, \r\n  Row\r\n} from 'reactstrap';\r\nimport Cart from \"../components/Cart\";\r\n\r\nconst Kids = () => {\r\n\r\n  const [products, setProducts] = useState([])  \r\n  const [search, setSearch] =useState('62f7398930933741203d6239')\r\n\r\n  // grab our data from the query \r\n  const {data: categoryData} = useQuery(QUERY_PRODUCTS, {\r\n    variables: {\r\n      // run our id so its hard coded\r\n      category: search\r\n    }\r\n  })\r\n\r\n  useEffect(()=> {\r\n    // if category data is there and its bigger than 0 \r\n    if(categoryData && categoryData.products.length > 0){\r\n      // set it to our products\r\n      setProducts(categoryData.products)\r\n    }\r\n\r\n  }, [categoryData])\r\n  \r\n  console.log(categoryData)\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h3>KIDS ART</h3>\r\n      <Container className='shop-container'>\r\n        <Row>\r\n          {products.map(product => (\r\n              <ProductItem\r\n                key={product._id}\r\n                _id={product._id}\r\n                image={product.image}\r\n                name={product.name}\r\n                price={product.price}\r\n                quantity={product.quantity}\r\n              />\r\n            ))}\r\n          </Row>\r\n      </Container>\r\n      <Cart />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Kids\r\n","import { useQuery } from '@apollo/react-hooks';\r\nimport React, {useState, useEffect} from 'react'\r\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\r\nimport ProductItem from \"../components/ProductItem/index\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {\r\n  Container,\r\n  Col, \r\n  Row\r\n} from 'reactstrap';\r\nimport Cart from \"../components/Cart\";\r\n\r\nconst Adults = () => {\r\n\r\n  const [products, setProducts] = useState([])  \r\n  const [search, setSearch] =useState('62f7398930933741203d623a')\r\n\r\n  // grab our data from the query \r\n  const {data: categoryData} = useQuery(QUERY_PRODUCTS, {\r\n    variables: {\r\n      // run our id so its hard coded\r\n      category: search\r\n    }\r\n  })\r\n\r\n  useEffect(()=> {\r\n    // if category data is there and its bigger than 0 \r\n    if(categoryData && categoryData.products.length > 0){\r\n      // set it to our products\r\n      setProducts(categoryData.products)\r\n    }\r\n\r\n  }, [categoryData])\r\n  \r\n  console.log(categoryData)\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h3>PROFESSIONAL ART </h3>\r\n\r\n      <Container className='shop-container'>\r\n        <Row>\r\n        {products.map(product => (\r\n            <ProductItem\r\n              key={product._id}\r\n              _id={product._id}\r\n              image={product.image}\r\n              name={product.name}\r\n              price={product.price}\r\n              quantity={product.quantity}\r\n            />\r\n          ))}\r\n        </Row>\r\n      </Container>\r\n      <Cart />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Adults\r\n","import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {\r\n  Col,\r\n  Row,\r\n  Container,\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './Footer.css'\r\n\r\n\r\nconst Footer = () => {\r\n  return (\r\n    \r\n    <Container className='footer-container'>\r\n      <Row className='footer-row'>\r\n        {/* left */}\r\n        <Col xs={6} sm={6} md={4} className='left'>\r\n          <h2>OUR NEWSLETTER</h2>\r\n          <p className='newsLetter-p'>Subscribe to our newsletter to receive special offers and updates on new products</p>\r\n          {/* <p>Email *</p> */}\r\n          <input className='input-box' placeholder='Email *' type=\"email\" />\r\n          <div>\r\n          <button className='footer-button'>Subscribe</button>\r\n          \r\n          </div>\r\n        </Col>\r\n        {/* middle */}\r\n        <Col xs={6} sm={4} md={4} className='middle'>\r\n          <h2>SHOP</h2>\r\n\r\n          <p>\r\n            <Link to='/professional'> Shop Professional Art</Link>\r\n          </p>\r\n          <p>\r\n            <Link to='/kids'>Shop Kids Art</Link>\r\n          </p>\r\n          <p>\r\n            <Link to='/'>Shipping & Returns</Link>\r\n          </p>\r\n          <p>\r\n            <Link to='/'>Store Policy</Link>\r\n          </p>\r\n          <p>\r\n            <Link to='/'>FAQ</Link>\r\n          </p>\r\n        </Col>\r\n        {/* right */}\r\n        <Col xs={6} sm={6} md={4}>\r\n          <h2>CONTACT</h2>\r\n          <p>7000 Coliseum Way, Oakland, CA 94621</p>\r\n          <p>info@mysite.com</p>\r\n          <p> 123-456-7890</p>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React, { useEffect } from \"react\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { useLazyQuery } from \"@apollo/react-hooks\";\r\nimport { QUERY_CHECKOUT } from \"../utils/queries\";\r\nimport { idbPromise } from \"../utils/helpers\";\r\nimport CartItem from \"../components/CartItem/index\";\r\nimport Auth from \"../utils/auth\";\r\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from \"../utils/actions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport '../index.css'\r\nimport {\r\n    Container,\r\n    Col, \r\n    Row,\r\n    Card\r\n  } from 'reactstrap';\r\nconst stripePromise = loadStripe(\"pk_test_TYooMQauvdEDq54NiTphI7jx\");\r\n\r\n\r\n\r\n\r\nconst Cart = () => {\r\n    const state = useSelector(state => state);\r\n    const dispatch = useDispatch();\r\n \r\n    const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\r\n\r\n    useEffect(() => {\r\n        if (data) {\r\n          stripePromise.then(res => {\r\n            res.redirectToCheckout({ sessionId: data.checkout.session });\r\n          });\r\n        }\r\n    }, [data]);\r\n\r\n    useEffect(() => {\r\n        async function getCart() {\r\n          const cart = await idbPromise(\"cart\", \"get\");\r\n          dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\r\n        }\r\n    \r\n        if (!state.cart.length) {\r\n          getCart();\r\n        }\r\n    }, [state.cart.length, dispatch]);\r\n\r\n    function calculateTotal() {\r\n        let sum = 0;\r\n        state.cart.forEach(item => {\r\n          sum += item.price * item.purchaseQuantity;\r\n        });\r\n        return sum.toFixed(2);\r\n    }\r\n\r\n\r\n    function submitCheckout() {\r\n        const productIds = [];\r\n    \r\n        state.cart.forEach(item => {\r\n          for (let i = 0; i < item.purchaseQuantity; i++) {\r\n            productIds.push(item._id);\r\n          }\r\n        });\r\n    \r\n        getCheckout({\r\n          variables: { products: productIds },\r\n        });\r\n    }\r\n\r\n  return (\r\n    <div >\r\n\r\n    <h2 className=\"cart-title\">Shopping Cart</h2>\r\n    {state.cart.length ? (\r\n      <div>\r\n        {state.cart.map(item => (\r\n          <CartItem key={item._id} item={item} />\r\n        ))}\r\n\r\n        <div className=\"cart-total\">\r\n          <strong>Total: $ {calculateTotal()}</strong>\r\n\r\n          {Auth.loggedIn() ? (\r\n            <>\r\n              <button onClick={submitCheckout}>Checkout</button>\r\n              \r\n            </>\r\n          ) : (\r\n            <Link to='/login'>\r\n              <span >(log in to check out)</span>\r\n            </Link>\r\n          )}\r\n        </div>\r\n      </div>\r\n    ) : (\r\n    \r\n      <>\r\n        <p>Your cart is currently empty</p>\r\n      </>\r\n    )}\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Cart","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { ApolloClient, InMemoryCache, createHttpLink } from \"@apollo/client\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Detail from \"./pages/Detail\";\r\nimport NoMatch from \"./pages/NoMatch\";\r\nimport Login from \"./pages/Login\";\r\nimport Signup from \"./pages/Signup\";\r\nimport Nav from \"./components/Nav\";\r\nimport Success from \"./pages/Success\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./utils/store\";\r\nimport Kids from \"./pages/Kids\";\r\nimport Adults from './pages/Adults'\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport Cart from \"./pages/Cart\";\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: \"/graphql\",\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem(\"id_token\");\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : \"\",\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <div>\r\n          <Provider store={store}>\r\n            <Nav />\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <Route exact path=\"/register\" component={Signup} />\r\n              <Route exact path=\"/success\" component={Success} />\r\n              <Route exact path=\"/products/:id\" component={Detail} />\r\n              <Route exact path=\"/kids\" component={Kids} />\r\n              <Route exact path=\"/professional\" component={Adults} />\r\n              <Route exact path=\"/Cart\" component={Cart} />\r\n              <Route component={NoMatch} />\r\n            </Switch>\r\n            <Footer />\r\n          </Provider>\r\n        </div>\r\n      </Router>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (\r\n    process.env.NODE_ENV === 'production' &&\r\n    'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}